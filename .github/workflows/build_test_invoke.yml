name: Build

on:
  push:
    branches:
      - master

env:
  PYTHON_VERSION_INSTALL: '3.11'
  SAM_CLI_DEV: 1
  PIP_CARGO_LAMBDA_VERSION: '1.1.0'

jobs:
  run-workflow:
    name: Build & Test & Invoke Templates
    runs-on: ubuntu-latest
    needs:
      - build-test-ruby
      - test-manifest
      - refactor-validation
    steps:
      - name: report-failure
        if: |
          needs.build-test-ruby.result != 'success' ||
          needs.test-manifest.result != 'success' ||
          needs.refactor-validation.result != 'success'
        run: exit 1
      - name: report-success
        run: exit 0

  ################
  # Test Manifest
  test-manifest:
    name: Test Manifest File
    env:
      PYTHON_VERSION_INSTALL: '3.12'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout PR
      - uses: actions/setup-python@v4
        name: Setup Python 3.12
        with:
          python-version: '3.12'
      - name: Run build tests for tests/unit/
        run: |
          pip install -r requirements.txt
          pytest -n auto -vvv tests/unit/

  ################
  # Ruby
  build-test-ruby:
    name: ${{ matrix.type }} / Ruby ${{ matrix.version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - version: '3.2'
            type: 'Test'
            file: 'tests/integration/unit_test/test_unit_test_ruby3_2.py'
          - version: '3.2'
            type: 'Invoke'
            file: 'tests/integration/build_invoke/ruby/test_ruby_3_2.py'
          - version: '3.3'
            type: 'Test'
            file: 'tests/integration/unit_test/test_unit_test_ruby3_3.py'
          - version: '3.3'
            type: 'Invoke'
            file: 'tests/integration/build_invoke/ruby/test_ruby_3_3.py'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout PR
      - uses: ./.github/actions/aws-sam-cli-develop
        name: Install develop version of AWS SAM CLI
      - uses: ruby/setup-ruby@v1
        name: Setup Ruby ${{ matrix.version }}
        with:
          ruby-version: ${{ matrix.version }}
      - name: Run build tests for ${{ matrix.file }}
        run: |
          pip install -r requirements.txt
          samdev --info
          ruby --version
          pytest -n auto -vvv ${{ matrix.file }}


  # refactor
  refactor-validation:
    name: refactor validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout PR
      - uses: ./.github/actions/aws-sam-cli-develop
        name: Install develop version of AWS SAM CLI
      - name: Run refactor tests
        run: |
          pip install -r requirements.txt
          samdev --info
          dotnet --info
          dotnet --version
          pytest -vvv --log-cli-level INFO tests/refactor
